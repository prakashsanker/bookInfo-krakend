openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: "https://buggy.tech.goharbor.com"
    description: Generated server url
paths:
  "/user/{id}":
    get:
      tags:
        - user-controller
      operationId: getBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
        - user-controller
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
        - user-controller
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/review/{id}":
    get:
      tags:
        - review-controller
      operationId: getReviewById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    put:
      tags:
        - review-controller
      operationId: updateReview
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewDTO"
    delete:
      tags:
        - review-controller
      operationId: deleteReview
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  "/book/{id}":
    get:
      tags:
        - book-info-controller
      operationId: getBookById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BookDTO"
    put:
      tags:
        - book-info-controller
      operationId: updateBook_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDTO"
    delete:
      tags:
        - book-info-controller
      operationId: deleteBook_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /user:
    post:
      tags:
        - user-controller
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
  /review:
    post:
      tags:
        - review-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /book:
    post:
      tags:
        - book-info-controller
      operationId: createBook_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDTO"
  /getBookByName:
    get:
      tags:
        - book-info-controller
      operationId: getBookByName
      parameters:
        - name: bookName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookDTO"
components:
  schemas:
    ReviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        rating:
          type: integer
          format: int32
        comment:
          type: string
        sentiment:
          type: string
        createdAt:
          type: integer
          format: int64
        byUserId:
          type: integer
          format: int64
        forBookId:
          type: integer
          format: int64
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        emailId:
          type: string
        mobileNumber:
          type: string
        createdAt:
          type: integer
          format: int64
        loginName:
          type: string
        reviews:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ReviewDTO"
    BookDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        publisher:
          type: string
        createdAt:
          type: integer
          format: int64
        creditCardNumber:
          type: string
        reviews:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ReviewDTO"
